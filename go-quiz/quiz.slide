Go Quiz
Guess the Output

Miki Tebeka
CEO, 353solutions
miki@353solutions.com
@tebeka

* Miki Tebeka

.image 353.png

* 

.image gcil-logo.png

- February 3, 2020 ∴ Expo Tel Aviv
- 400 people, 2 tracks
- Kris Nove & Dave Cheney will give keynote
- Tickets on sale at [[https://ti.to/hamakor/gophercon-2020][https://ti.to/hamakor/gophercon-2020]]


* Quiz Rules

- I'll show a short program and ask what it'll print
- You have 30 seconds to guess the output (multiple selection)
- There are 20 questions total
- Three poeple with most right answers will get a GoLand license

Speical thanks to [[https://twitter.com/davecheney][Dave Cheney]] & [[https://twitter.com/bradfitz][Brad Fitzpatrick]]



# * Map
# 
# .play -edit -numbers empty-map-ok.go
# 
# *A:* 1
# *B:* panic
# *C:* Won't compile
# *D:* 0

* Chars

.play -edit -numbers stridx.go

*A:* int8
*B:* uint8
*C:* byte
*D:* rune

# * Pointers
# 
# .play -edit -numbers ptr.go
# 
# *A:* 9 8
# *B:* 8 9
# *C:* 8 8
# *D:* 9 9

# * Map
# 
# .play -edit -numbers empty-map.go
# 
# *A:* 1
# *B:* 0
# *C:* Won't compile
# *D:* panic

# * For
# 
# .play -edit -numbers str.go
# 
# *A:* K r a k ó w
# *B:* 0 1 2 3 4 5
# *C:* 0 1 2 3 4 6
# *D:* Kraków

* Vars

.play -edit -numbers vars.go

*A:* 1 2
*B:* 1 3
*C:* Won't compile
*D:* 3 4

* Tick

.play -edit -numbers tick.go

*A:* bye
*B:* Won't compile
*C:* Deadlock
*D:* bye bye

* Unicode

.play -edit -numbers unicode.go

*A:* 6
*B:* 7
*C:* 8
*D:* Won't compile


* Vars

.play -edit -numbers vars2.go

*A:* 1 2 3
*B:* Won't compile
*C:* 1 3 4
*D:* 1 1 3

* Map

.play -edit -numbers map.go

*A:* 1
*B:* 0
*C:* Won't compile
*D:* panic

* Rune
.play -edit -numbers rune.go

*A:* int8
*B:* rune
*C:* int32
*D:* uint32

* Ints & Floats

.play -edit -numbers float-int.go

*A:* 36
*B:* 33
*C:* Won't compile
*D:* 36.3

* Times

.play -edit -numbers time.go

*A:* before
*B:* before after
*C:* Won't compile
*D:* Deadlock

* Power

.play -edit -numbers xor.go

*A:* Won't compile
*B:* 1024
*C:* 512
*D:* 8

# * Ints & Floats
# 
# .play -edit -numbers float-int2.go
# 
# *A:* 36
# *B:* 33
# *C:* Won't compile
# *D:* 36.3

* For Append

.play -edit -numbers appendfor.go

*A:* Hang
*B:* [1 2 3 1 2 3]
*C:* [1 2 3 0 1 2]
*D:* [1 2 3 [1 2 3]]

# * Slices
# 
# .play -edit -numbers slice.go
# 
# *A:* [1 2 3]
# *B:* [1 2 99]
# *C:* [99 2 3]
# *D:* [1 99 3]
 
* Init

.play -edit -numbers init.go

*A:* A B
*B:* B A
*C:* B
*D:* Won't compile

* Append

.play -edit -numbers sliceappend.go

*A:* [1 2 3 4]
*B:* [1 99 3 4]
*C:* [1 2 99 3]
*D:* [1 2 3]

* Sleep Sort

.play -edit -numbers sleep-sort.go /^func main/,/^}/

*A:* 1 2 3
*B:* 1 1 1
*C:* 2 2 2
*D:* Deadlock

# * Types
# 
# .play -edit -numbers callers.go
# 
# *A:* [0 1 2]
# *B:* [0 0 0]
# *C:* [1 2 3]
# *D:* Won't compile

# * Resolve
# 
# .play -edit -numbers resolve.go
# 
# *A:* 3
# *B:* 0
# *C:* Won't compile
# *D:* panic

* π

.play -edit -numbers pi.go

*A:* 3
*B:* 3.142857142857143
*C:* Won't compile
*D:* 4

# * For
# 
# .play -edit -numbers for.go
# 
# *A:* s u p ?
# *B:* c c c c
# *C:* Won't compile
# *D:* sup?

# * Print
# 
# .play -edit -numbers print-char.go
# 
# *A:* 65
# *B:* a
# *C:* 97
# *D:* C

* Error

.play -edit -numbers err.go

*A:* true
*B:* panic
*C:* Won't compile
*D:* false


# * Vars
# 
# .play -edit -numbers vars3.go
# 
# *A:* 3 5
# *B:* ∞ loop
# *C:* 8 8
# *D:* 8 3

* Channel

.play -edit -numbers ch.go

*A:* 0
*B:* deadlock
*C:* 2
*D:* panic

# * Struct
# 
# .play -edit -numbers underscore.go
# 
# *A:* Won't compile
# *B:* {1 2 3}
# *C:* {1 0 3}
# *D:* {0 0 0}

* Defer

.play -edit -numbers defer.go

*A:* 2 1 0
*B:* 2 2 2
*C:* 0 1 2
*D:* 3 3 3


* Strings

.play -edit -numbers streq.go

*A:* false
*B:* true
*C:* Won't compile
*D:* 1

* Quote

.play -edit -numbers quote.go

*A:* string string
*B:* rune string
*C:* int32 string
*D:* int32 int32

# * Function Var
# 
# .play -edit -numbers fnvar.go
# 
# *A:* 109876543210
# *B:* Won't compile
# *C:* 10x
# *D:* 10

* String

.play -edit -numbers raw.go

*A:* Won't compile
*B:* a\tb
*C:* a	b
*D:* a9b

* The End

How many did you get right?
